services:
  zookeeper:
    image: "confluentinc/cp-zookeeper:7.4.0"
    hostname: "zookeeper"
    container_name: "zookeeper"
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_INIT_LIMIT: 3
      ZOOKEEPER_SYNC_LIMIT: 2
    networks:
      - kafka-net

  kafka1:
    image: "confluentinc/cp-kafka:7.4.0"
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9091:9091"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29091,PLAINTEXT_HOST://localhost:9091
    networks:
      - kafka-net

  kafka2:
    image: "confluentinc/cp-kafka:7.4.0"
    hostname: kafka2
    container_name: kafka2
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:29092,PLAINTEXT_HOST://localhost:9092
    networks:
      - kafka-net

  kafka3:
    image: "confluentinc/cp-kafka:7.4.0"
    hostname: kafka3
    container_name: kafka3
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:29093,PLAINTEXT_HOST://localhost:9093
    networks:
      - kafka-net

  kafka-ui:
    image: "provectuslabs/kafka-ui:latest"
    hostname: kafka-ui
    container_name: kafka-ui
    ports:
      - "9020:8080"
    environment:
      AUTH_TYPE: DISABLED
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:29091,kafka2:29092,kafka3:29093
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    networks:
      - kafka-net

  redis:
    image: redis:7.2-alpine
    container_name: redis
    restart: always
    command: redis-server --save 60 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "$$REDIS_PASSWORD", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

    volumes:
      - redis-data:/data
    networks:
      - kafka-net

  price-producer:
    build:
      context: ./price-producer
      dockerfile: Dockerfile
    container_name: price-producer
    environment:
      ADDRESSES: "kafka1:29091,kafka2:29092,kafka3:29093"
      TOPIC: "price"
      TICKERS: "AAPL,GOOG,TSLA"
      INTERVAL_MS: "5000"
      INITIAL_PRICE: "200.0"
      VOLATILITY_PERCENT: "0.5"
      PRICE_PORT: "8080"
    command: ["/app/price-producer", "--config-path", "/app/config/config.yaml"]
    ports:
      - "8080:8080"
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    healthcheck:
      test: ["CMD", "sh", "-c", "nc -z localhost 8080"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - kafka-net

  price-cache:
    build:
      context: ./price-cache
      dockerfile: Dockerfile
    container_name: price-cache
    environment:
      ADDRESSES: "kafka1:29091,kafka2:29092,kafka3:29093"
      TOPIC: "price"
      GROUP_ID: "price-cache"
      REDIS_ADDR: "redis:6379"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
      REDIS_DB: "0"
      GRPC_PORT: "6000"
    command: ["/app/price-cache", "--config-path", "/app/config/config.yaml"]
    ports:
      - "6000:6000"
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - redis
    healthcheck:
      test: ["CMD", "sh", "-c", "nc -z localhost 6000"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - kafka-net

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    environment:
      HTTP_PORT: "8081"
      PRICE_CACHE_HOST: "price-cache"
      PRICE_CACHE_PORT: "6000"
    command: ["/app/api-gateway", "--config-path", "/app/config/config.yaml"]
    ports:
      - "8081:8081"
    depends_on:
      - price-cache
    healthcheck:
      test: ["CMD", "sh", "-c", "nc -z localhost 8081"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: bridge

volumes:
  redis-data: